services:
  https-proxy:
    image: steveltn/https-portal:1
    ports:
      - '80:80'
      - '443:443'
    networks:
      - proxy
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DOMAINS: '${RETRIEVER_DOMAIN_NAME} -> http://retriever:80'
      STAGE: 'production'
      ERROR_LOG: default
      ACCESS_LOG: default
    volumes:
      - https-portal-data:/var/lib/https-portal

  retriever:
    build:
      context: .
      dockerfile: retriever_prod.Dockerfile
    restart: on-failure:3
    depends_on:
      - database
    networks:
      - db
      - proxy

    env_file:
      - .env

    volumes:
      - type: bind
        source: ${EMBED_MODEL_SOURCE}
        target: ${EMBED_MODEL_CACHE}
        read_only: true

      - type: volume
        source: api-keys-db  
        target: ${FASTAPI_SIMPLE_SECURITY_DB_PATH-/}
    environment:
      - CHROMA_HOST_ADDRESS=database
      - CHROMA_HOST_PORT=8000
      - FASTAPI_SIMPLE_SECURITY_SECRET=${FASTAPI_SIMPLE_SECURITY_SECRET}
      - FASTAPI_SIMPLE_SECURITY_DB_LOCATION=${FASTAPI_SIMPLE_SECURITY_DB_PATH}/keys.db
      - FAST_API_SIMPLE_SECURITY_AUTOMATIC_EXPIRATION=${FAST_API_SIMPLE_SECURITY_AUTOMATIC_EXPIRATION_DAYS}
      
    command:
      [
        "uvicorn",
        "src.retriever.api:app",
        "--proxy-headers",
        "--host",
        "0.0.0.0",
        "--port",
        "80"
      ]

  database:
    build:
      context: .
      dockerfile: chroma.Dockerfile
    restart: on-failure:3
    networks:
      - db
    volumes:
      - type: bind
        source: ${DB_DATA_PATH}
        target: /chroma/chroma
        read_only: true
    command:
      [
        "chroma",
        "run",
        "--path",
        "/chroma/chroma",
        "--host",
        "database",
        "--port",
        "8000"
      ]
    env_file:
      - ./.env

networks:
  db:
  proxy:


volumes:
  https-portal-data:
  api-keys-db:
